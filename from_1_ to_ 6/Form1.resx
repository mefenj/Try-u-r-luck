<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ANd+tais8dawAAAAAElFTkSuQmCC
</value>
  </data>
</root>